{
  "swagger": "2.0",
  "info": {
    "description": "Documentation of RESTful API for Binar Challenge Chapter 8",
    "version": "1.0.0",
    "title": "RESTful API - Swagger",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "raynaldihadirizky17@gmail.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host": "localhost:5000",
  "basePath": "/api",
  "tags": [
    {
      "name": "players",
      "description": "",
      "externalDocs": {
        "description": "UsersAPI",
        "url": "localhost:5000/api/players"
      }
    }
  ],
  "schemes": [
    "http"
  ],
  "paths": {
    "/players": {
      "post": {
        "tags": [
          "players"
        ],
        "summary": "Create new players",
        "description": "New player",
        "operationId": "addPlayer",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Player's Data",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "username": {
                  "type": "string",
                  "example": "raynaldi"
                },
                "email": {
                  "type": "string",
                  "example": "anaksultan@gmail.com"
                },
                "experience": {
                  "type": "string",
                  "example": "pro-tier"
                },
                "level": {
                  "type": "integer",
                  "example": 54
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successfully create new player",
            "schema": {
              "$ref": "#/definitions/Players"
            }
          },
          "400": {
            "description": "Error",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "type": "string",
                  "example": "FAILED"
                },
                "message": {
                  "type": "string",
                  "example": "username or email field cannot be empty."
                }
              }
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "type": "string",
                  "example": "FAILED"
                },
                "message": {
                  "type": "string",
                  "example": "Some error occurred while creating new player."
                }
              }
            }
          }
        },
        "security": [
          {
            "Token": []
          }
        ]
      },
      "get": {
        "tags": [
          "players"
        ],
        "summary": "Find all players",
        "description": "showing all player's data profile",
        "operationId": "allPlayers",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Players"
            }
          },
          "500": {
            "description": "Some error occurred while retrieving players."
          }
        }
      }
    },
    "/players/{id}": {
      "get": {
        "tags": [
          "players"
        ],
        "summary": "Find players by ID",
        "description": "shown the choosen player",
        "operationId": "getPlayerById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id player",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "type": "string",
                  "example": "Success"
                },
                "message": {
                  "$ref": "#/definitions/Players"
                }
              }
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "type": "string",
                  "example": "FAILED"
                },
                "message": {
                  "type": "string",
                  "example": "Error retrieving Player with id = 0"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "players"
        ],
        "summary": "Updating player's profile",
        "description": "",
        "operationId": "updatePlayerWithForm",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Players Data",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "username": {
                  "type": "string",
                  "example": "rizky"
                },
                "email": {
                  "type": "string",
                  "example": "anaksultan@gmail.com"
                },
                "expereience": {
                  "type": "string",
                  "example": "grand master"
                },
                "level": {
                  "type": "integer",
                  "example": 89
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "type": "string",
                  "example": "Success"
                },
                "message": {
                  "example": "Player was updated successfully"
                }
              }
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "type": "string",
                  "example": "FAILED"
                },
                "message": {
                  "type": "string",
                  "example": "Cannot update Player with id=0. Maybe Player was not found or req.body is empty!"
                }
              }
            }
          }
        },
        "security": [
          {
            "Token": []
          }
        ]
      },
      "delete": {
        "tags": [
          "players"
        ],
        "summary": "Deleting player's profile",
        "description": "",
        "operationId": "deletePlayer",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Player id to delete",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "type": "string",
                  "example": "Success"
                },
                "message": {
                  "example": "Player was deleted successfully"
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "type": "string",
                  "example": "FAILED"
                },
                "message": {
                  "type": "string",
                  "example": "Cannot delete Player with id=0. Maybe Player was not found!"
                }
              }
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "type": "string",
                  "example": "FAILED"
                },
                "message": {
                  "type": "string",
                  "example": "Could not delete Player with id=0"
                }
              }
            }
          }
        },
        "security": [
          {
            "Token": []
          }
        ]
      }
    },
    "/players/exp/{id}": {
      "post": {
        "tags": [
          "players"
        ],
        "summary": "Add experience players",
        "description": "",
        "operationId": "addExperience",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of player to update",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "type": "string",
                  "example": "Success"
                },
                "message": {
                  "example": "Player with id=0 has more experience."
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "type": "string",
                  "example": "FAILED"
                },
                "message": {
                  "type": "string",
                  "example": "exp field cannot be empty."
                }
              }
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "type": "string",
                  "example": "FAILED"
                },
                "message": {
                  "type": "string",
                  "example": "Cannot update Player with id=0!"
                }
              }
            }
          }
        },
        "security": [
          {
            "Token": []
          }
        ]
      }
    }
  },
  "securityDefinitions": {
    "Token": {
      "type": "apiKey",
      "in": "header",
      "name": "Authorization"
    }
  },
  "definitions": {
    "Players": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "username": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "experience": {
          "type": "integer",
          "format": "int64"
        },
        "lvl": {
          "type": "integer",
          "format": "int64"
        }
      },
      "xml": {
        "name": "Players"
      }
    }
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  }
}